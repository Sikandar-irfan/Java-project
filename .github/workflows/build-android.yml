name: Build Android APK

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Create build.gradle in root
      run: |
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:8.1.2'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        EOF
    
    - name: Create settings.gradle
      run: |
        echo "include ':android'" > settings.gradle
    
    - name: Create gradle wrapper
      run: |
        mkdir -p gradle/wrapper
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.4-bin.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
    
    - name: Make gradlew executable
      run: |
        # Download gradle wrapper
        curl -L https://services.gradle.org/distributions/gradle-8.4-bin.zip -o gradle.zip
        unzip -q gradle.zip
        gradle-8.4/bin/gradle wrapper
        chmod +x gradlew
    
    - name: Create missing resource files
      run: |
        mkdir -p android/src/main/res/xml
        mkdir -p android/src/main/res/mipmap-hdpi
        mkdir -p android/src/main/res/mipmap-mdpi
        mkdir -p android/src/main/res/mipmap-xhdpi
        mkdir -p android/src/main/res/mipmap-xxhdpi
        mkdir -p android/src/main/res/mipmap-xxxhdpi
        
        # Create basic theme
        cat > android/src/main/res/values/themes.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <style name="Theme.TicTacToe" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
                <item name="colorPrimary">@android:color/holo_blue_bright</item>
                <item name="colorPrimaryVariant">@android:color/holo_blue_dark</item>
                <item name="colorOnPrimary">@android:color/white</item>
            </style>
        </resources>
        EOF
        
        # Create backup rules
        cat > android/src/main/res/xml/backup_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <full-backup-content>
        </full-backup-content>
        EOF
        
        # Create data extraction rules
        cat > android/src/main/res/xml/data_extraction_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <data-extraction-rules>
            <cloud-backup>
            </cloud-backup>
            <device-transfer>
            </device-transfer>
        </data-extraction-rules>
        EOF
        
        # Create basic launcher icons (placeholder)
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==" | base64 -d > android/src/main/res/mipmap-hdpi/ic_launcher.png
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==" | base64 -d > android/src/main/res/mipmap-hdpi/ic_launcher_round.png
        cp android/src/main/res/mipmap-hdpi/ic_launcher.png android/src/main/res/mipmap-mdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher_round.png android/src/main/res/mipmap-mdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher.png android/src/main/res/mipmap-xhdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher_round.png android/src/main/res/mipmap-xhdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher.png android/src/main/res/mipmap-xxhdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher_round.png android/src/main/res/mipmap-xxhdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher.png android/src/main/res/mipmap-xxxhdpi/
        cp android/src/main/res/mipmap-hdpi/ic_launcher_round.png android/src/main/res/mipmap-xxxhdpi/
    
    - name: Build APK
      run: ./gradlew :android:assembleDebug
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: tictactoe-android-apk
        path: android/build/outputs/apk/debug/*.apk
    
    - name: Upload APK to Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: android/build/outputs/apk/debug/android-debug.apk
        asset_name: TicTacToe-Android.apk
        asset_content_type: application/vnd.android.package-archive